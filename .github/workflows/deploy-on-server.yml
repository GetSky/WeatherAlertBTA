name: Manual deployment

on:
  workflow_dispatch:

jobs:
  deployment:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'production' || 'develop' }}
    steps:
      - name: install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.DEPLOY_SSH_HOST }} > ~/.ssh/known_hosts

      - name: run service
        run: ssh ${{ secrets.DEPLOY_SSH_USER }}@${{ secrets.DEPLOY_SSH_HOST }} "cd ${{ secrets.DEPLOY_WORK_DIR }} &&
          docker pull ${{ vars.DEPLOY_REGISTRY_USERNAME }}/${{ vars.DEPLOY_IMAGE_NAME }}:${{ vars.DEPLOY_IMAGE_TAG }} &&
          docker rm -f ${{ vars.DEPLOY_IMAGE_NAME }}-${{ vars.DEPLOY_IMAGE_TAG }} || true &&
          docker run -d --name ${{ vars.DEPLOY_IMAGE_NAME }}-${{ vars.DEPLOY_IMAGE_TAG }} --restart=always
          -e BOT_TOKEN=${{ secrets.APP_BOT_TOKEN }}
          -e TELEGRAM_CHAT_ID=${{ secrets.APP_TELEGRAM_CHAT_ID }}
          -e WEATHER_URL=${{ vars.APP_WEATHER_URL }}
          -e CHART_WEATHER_URL=${{ vars.APP_CHART_WEATHER_URL }}
          -e WIND_THRESHOLD=${{ vars.APP_WIND_THRESHOLD }}
          -e POLL_INTERVAL=${{ vars.APP_POLL_INTERVAL }}
          -e DELAY_TIME_IN_MINUTES=${{ vars.APP_DELAY_TIME_IN_MINUTES }}
          ${{ vars.DEPLOY_REGISTRY_USERNAME }}/${{ vars.DEPLOY_IMAGE_NAME }}:${{ vars.DEPLOY_IMAGE_TAG }} &&
          exit"